= sorcery
Magical Authentication

Inspired by restful_authentication, Authlogic and Devise.
Crypto code taken almost unchanged from Authlogic.

== Features:

* Basic Login/Logout.
* Password encryption with configurable algorithm.
* User activation by email with optional success email.
* Reset password with email verification.
* Remember me with configurable expiration.
* Configurable session timeout.
* Modular design, load only the modules you need.
* 100% TDD'd code, 100% test coverage.

== Goals:

This gem plugin was started out of a few personal goals which are not related to the problem solved by it at all:
* I wanted to write something 100% TDD from start to finish.
* I wanted to learn how to write an engine for Rails 3.

In addition to the above goals, when I decided this will be an authentication plugin, and while looking at existing solutions, these goals came up:
* Simple & short configuration, not drowning in syntactic sugar.
* Keep MVC cleanly separated - DB is for models, sessions are for controllers. Models stay unaware of sessions.
* Magic yes, Voodoo no.
* No generated code polluting the application's code.
* No built-in controllers, models, mailers, migrations or templates; Real apps will need all of these custom made.
* Nice to have: support for more ORMs and web frameworks (Sinatra, Mongoid).

== Installation:

gem install sorcery

== Configuration:

There are 3 places to configure the plugin:
1. config/application.rb

config.sorcery.submodules = [:user_activation, :remember_me] # add the modules you want to use

2. app/models/user.rb (or another model of your choice)

activate_sorcery! do |config|
  config.sorcery_mailer = MyMailer
  config.username_attribute_name = :email
end

3. app/controllers/application_controller.rb (this is actually needed only in some cases)

activate_sorcery! do |config|
  config.session_timeout = 10.minutes
end


The configuration options vary with the modules you've chosen to use.

== Basic Configuration:

TODO

== User Activation Configuration:

TODO

== Remember Me Configuration:

TODO

== Password Reset Configuration:

TODO

== Session Timeout Configuration:

TODO

== TODO

I've got many ideas which include:
* Auto login
* Other reset password strategies (security questions?)
* Sinatra support
* Mongoid support
* Hammering logins protection
* Hammering reset password protection
* OmniAuth integration
* Activity logging

== Contributing to sorcery
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2010 Noam Ben Ari (nbenari@gmail.com). See LICENSE.txt for further details.
Released with permission from Kontera (http://www.kontera.com), where I work.

